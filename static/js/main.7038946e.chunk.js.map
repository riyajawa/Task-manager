{"version":3,"sources":["Components/Button.js","Components/Header.js","Components/Task.js","Components/Tasks.js","Components/AddTask.js","Components/Footer.js","Components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Heading","title","onAdd","showAdd","location","useLocation","pathname","prototype","PropTypes","string","isRequired","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","deleteTask","method","filter","toggleReminder","taskToToggle","updTask","headers","body","JSON","stringify","addTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7038946e.chunk.js","sourcesContent":["import React from 'react'\r\nimport propTypes from 'prop-types'\r\n\r\nconst Button = ({color,text,onClick}) => {\r\n    \r\n    return (\r\n     <button \r\n     onClick={onClick}\r\n      style={{backgroundColor : color}} \r\n      className='btn'>{text}\r\n     </button>)\r\n}\r\nButton.defaultProps ={\r\n    color: 'steelblue'\r\n}\r\nButton.propTypes ={\r\n    text : propTypes.string,\r\n    color: propTypes.string,\r\n    onClick : propTypes.func\r\n}\r\nexport default Button\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from './Button'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n\r\nconst Heading = ({title,onAdd , showAdd}) => {\r\n    const location = useLocation()\r\n    return (\r\n       <header className='header'>\r\n           <h1>{title}</h1>\r\n\r\n          { location.pathname == '/' && \r\n              (\r\n              <Button \r\n              color={showAdd ? 'red' : 'green'}\r\n               text={showAdd ? 'Close' : 'Add'}\r\n               onClick={onAdd}/>\r\n               )}\r\n       </header>\r\n    )\r\n}\r\nHeading.defaultProps = {\r\n    title : 'Task tracker'\r\n}\r\nHeading.prototype={\r\n    title : PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Heading \r\n","import React from 'react'\r\nimport {FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ({task , onDelete,onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`}\r\n        onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes style={{color: 'red', cursor : 'pointer'}}\r\n            onClick={() => onDelete(task.id)}/>\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\nimport Task from './Task'\r\n\r\n\r\nconst Tasks = ({tasks,onDelete,onToggle}) => {\r\n    \r\n    return (\r\n        <>\r\n          {tasks.map(( task,index) => (\r\n           <Task key={index} task={task}\r\n           onDelete={onDelete} onToggle={onToggle}/>\r\n          ))}  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\n   \r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text,setText] = useState('')\r\n    const [day,setDay] = useState('')\r\n    const [reminder,setReminder] = useState(false)\r\n\r\n   const onSubmit = (e) => {\r\n       e.preventDefault()\r\n\r\n       if(!text){\r\n           alert('Please add task')\r\n           return\r\n       }\r\n\r\n       onAdd({text,day,reminder})\r\n\r\n       setText('')\r\n       setDay('')\r\n       setReminder(false)\r\n   }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n             <label>Task</label>\r\n             <input type='text' placeholder='Add task' value={text} onChange={(e) => setText(e.target.value)}></input>\r\n            </div>\r\n            <div className='form-control'>\r\n             <label>Day and time</label>\r\n             <input type='text' placeholder='Add day and time'\r\n             value={day} onChange={(e) => setDay(e.target.value)}></input>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n             <label> Set Reminder</label>\r\n             <input type='checkbox' checked={reminder}\r\n             value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}></input>\r\n            </div>\r\n            <input type='submit' value='Save task' className='btn btn-block'></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy ; 2021</p>\r\n            <Link to =\"/about\">About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <Link to=\"/\">Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\nimport Heading from './Components/Header'\nimport Tasks from './Components/Tasks'\nimport { useState ,useEffect} from 'react';\nimport {BrowserRouter as Router,Route} from 'react-router-dom'\nimport AddTask from './Components/AddTask';\nimport Footer from './Components/Footer';\nimport About from './Components/About';\n\n\n\nfunction App() {\n  const [showAddTask,setShowAddTask] = useState(false)\n  const [tasks,setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n\n//fetch tasks\nconst fetchTasks = async () => {\n  const res = await fetch('http://localhost:5000/tasks')\n  const data = await res.json()\n\n  return data\n}\n\n//fetch task\nconst fetchTask = async (id) => {\n  const res = await fetch(`http://localhost:5000/tasks/${id}`)\n  const data = await res.json()\n\n  return data\n}\n\n//Delete task\n\nconst deleteTask = async(id) => {\n  await fetch(`http://localhost:5000/tasks/${id}`,{\n    method : 'DELETE'\n  })\n\n\n  setTasks(tasks.filter((task) => task.id !==id))\n}\n\n\n//toggle remainder\nconst toggleReminder = async (id) => {\n  const taskToToggle = await fetchTask(id)\n  const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n  const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(updTask),\n  })\n\n  const data = await res.json()\n\n  setTasks(\n    tasks.map((task) =>\n      task.id === id ? { ...task, reminder: data.reminder } : task\n    )\n  )\n}\n //add task\n\n const addTask = async (task) => {\n  const res = await fetch('http://localhost:5000/tasks', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(task),\n  })\n\n  const data = await res.json()\n\n  setTasks([...tasks, data])\n\n  // const id = Math.floor(Math.random() * 10000) + 1\n  // const newTask = { id, ...task }\n  // setTasks([...tasks, newTask])\n}\n\n  return (\n    <Router>\n    <div className=\"container\">\n     <Heading onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n \n     <Route path=\"/\" exact render={(props) => (\n       <>\n             {showAddTask && <AddTask onAdd={addTask}/>}\n     {tasks.length>0 ? <Tasks tasks ={tasks} onDelete = {deleteTask} \n       onToggle ={toggleReminder}\n     />: ('No task')}\n       </>\n     )} />\n     <Route path = \"/about\" component={About}/>\n     <Footer/>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}